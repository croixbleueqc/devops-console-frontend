/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://bit.dev/docs/workspace/workspace-configuration
 **/{
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "devops-console-frontend",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "croixbleue.devops"
  },
  /**
   * Devops Console Frontend demo React-App deployed on Netlify
   **/
  "croixbleue.devops/demo-app/devops-console-demo": {},
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "dependencies": {
        "@babel/runtime": "7.20.6",
        "@kubernetes/client-node": "0.17.1",
        "@monaco-editor/react": "4.4.6",
        "@teambit/cloud-providers.deployers.netlify": "0.0.13",
        "@teambit/react.eslint-config-bit-react": "0.0.692",
        "@types/jest": "29.2.4",
        "@types/node": "18.11.11",
        "@types/react": "^17.0.8",
        "@types/react-dom": "^17.0.5",
        "@types/testing-library__jest-dom": "5.14.5",
        "@typescript-eslint/eslint-plugin": "5.45.1",
        "core-js": "^3.26.1",
        "eslint-import-resolver-node": "0.3.6",
        "eslint-plugin-import": "2.26.0",
        "eslint-plugin-jest": "27.1.6",
        "eslint-plugin-jsx-a11y": "6.6.1",
        "eslint-plugin-mdx": "2.0.5",
        "eslint-plugin-react": "7.31.11",
        "monaco-editor": "0.34.1",
        "openapi-typescript-codegen": "0.23.0",
        "react-router-dom": "6.4.5"
      },
      "peerDependencies": {
        "@babel/core": ">=7.0.0 <8.0.0",
        "@emotion/react": "11.10.5",
        "@emotion/styled": "11.10.5",
        "@mui/icons-material": "5.10.16",
        "@mui/material": "5.10.17",
        "@teambit/legacy": "1.0.400",
        "@testing-library/react": "12.1.5",
        "@testing-library/react-hooks": "8.0.1",
        "@typescript-eslint/parser": ">=5.0.0 <6.0.0",
        "eslint": "8.29.0",
        "eslint-plugin-react-hooks": "^4 || ^3 || ^2.3.0 || ^1.7.0",
        "graphql": "14.x || 15.x",
        "react": "^16.8.0 || ^17.0.0",
        "react-dom": "^16.8.0 || ^17.0.0",
        "typescript": ">=2.8.0"
      }
    },
    "linkCoreAspects": true
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://bit.dev/docs/workspace/variants for more info.
   **/
  "teambit.workspace/variants": {}
}